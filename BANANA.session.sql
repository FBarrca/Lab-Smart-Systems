-- @block
-- Drop all tables in the database
Drop DATABASE BANANA;
-- @block
-- Drop all tables in the database
CREATE DATABASE BANANA;
-- @BLOCK
USE BANANA;
-- @block
/* WEATHER ENTITY WITH ADDRESS ->
 *
 *
 */
CREATE TABLE WEATHER (
    RAIN VARCHAR(18) NULL,
    TEMPERATURE VARCHAR(18) NULL,
    LON FLOAT NOT NULL,
    LAT FLOAT NOT NULL,
    TIMESTAMP DATETIME NOT NULL
);
CREATE UNIQUE INDEX XPKWEATHER ON WEATHER (LON ASC, LAT ASC, TIMESTAMP ASC);
ALTER TABLE WEATHER
ADD CONSTRAINT XPKWEATHER PRIMARY KEY (LON, LAT, TIMESTAMP);
CREATE TABLE ADDRESS (
    LON FLOAT NOT NULL,
    LAT FLOAT NOT NULL,
    DESCRIPTION VARCHAR(18) NULL
);
CREATE UNIQUE INDEX XPKADDRESS ON ADDRESS (LON ASC, LAT ASC);
ALTER TABLE ADDRESS
ADD CONSTRAINT XPKADDRESS PRIMARY KEY (LON, LAT);
/* ESTATE ENTITY ->
 *
 *
 */
CREATE TABLE ESTATE (
    _default_ VARCHAR(18) NULL,
    LON FLOAT NOT NULL,
    LAT FLOAT NOT NULL
);
CREATE UNIQUE INDEX XPKESTATE ON ESTATE (LON ASC, LAT ASC);
ALTER TABLE ESTATE
ADD CONSTRAINT XPKESTATE PRIMARY KEY (LON, LAT);
/* SECTOR ENTITY ->
 *
 *       WEAK TO ESTATE. INHERITS LON AND LAT FROM ESTATE.
 */
CREATE TABLE SECTOR (
    id_sector INTEGER NOT NULL,
    LON FLOAT NULL,
    LAT FLOAT NULL,
    WATER_DEMAND VARCHAR(18) NULL
);
CREATE UNIQUE INDEX XPKSECTOR ON SECTOR (id_sector ASC);
ALTER TABLE SECTOR
ADD CONSTRAINT XPKSECTOR PRIMARY KEY (id_sector);
/* SECTOR ENTITY BRANCHES->  ACTUATORS
 *
 *
 */
CREATE TABLE SECT_ACT_LOC (
    ID_ACTUATOR INTEGER NOT NULL,
    id_sector INTEGER NULL
);
CREATE UNIQUE INDEX XPKSECT_ACT_LOC ON SECT_ACT_LOC (ID_ACTUATOR ASC);
ALTER TABLE SECT_ACT_LOC
ADD CONSTRAINT XPKSECT_ACT_LOC PRIMARY KEY (ID_ACTUATOR);
CREATE TABLE ACTUATOR_SECTOR (
    ID_ACTUATOR INTEGER NOT NULL,
    ID_TYPE INTEGER NULL
);
CREATE UNIQUE INDEX XPKACTUATOR_SECTOR ON ACTUATOR_SECTOR (ID_ACTUATOR ASC);
ALTER TABLE ACTUATOR_SECTOR
ADD CONSTRAINT XPKACTUATOR_SECTOR PRIMARY KEY (ID_ACTUATOR);
/*
 CREATE TABLE NUTRITION_VALVE (
 ID_ACTUATOR INTEGER NOT NULL,
 FLOW_RATE INTEGER NULL
 );
 CREATE UNIQUE INDEX XPKNUTRITION_VALVE ON NUTRITION_VALVE (ID_ACTUATOR ASC);
 ALTER TABLE NUTRITION_VALVE
 ADD CONSTRAINT XPKNUTRITION_VALVE PRIMARY KEY (ID_ACTUATOR);
 
 
 CREATE TABLE PUMP (
 ID_ACTUATOR INTEGER NOT NULL,
 IS_ACTIVE VARCHAR(18) NULL
 );
 CREATE UNIQUE INDEX XPKPUMP ON PUMP (ID_ACTUATOR ASC);
 ALTER TABLE PUMP
 ADD CONSTRAINT XPKPUMP PRIMARY KEY (ID_ACTUATOR);
 */
CREATE TABLE VALUE_SECTOR_ACTUATOR (
    ID_ACTUATOR INTEGER NOT NULL,
    TIMESTAMP DATETIME NOT NULL,
    VALUE INTEGER NULL
);
CREATE UNIQUE INDEX XPKVALUE ON VALUE_SECTOR_ACTUATOR (ID_ACTUATOR ASC, TIMESTAMP ASC);
ALTER TABLE VALUE_SECTOR_ACTUATOR
ADD CONSTRAINT XPKVALUE PRIMARY KEY (ID_ACTUATOR, TIMESTAMP);
/* SECTOR ENTITY BRANCHES->  SENSORS
 *
 *
 */
CREATE TABLE SECT_SENS_LOC (
    ID_SENSOR INTEGER NOT NULL,
    id_sector INTEGER NULL
);
CREATE UNIQUE INDEX XPKSECT_ACT_LOC ON SECT_SENS_LOC (ID_SENSOR ASC);
ALTER TABLE SECT_SENS_LOC
ADD CONSTRAINT XPKSECT_ACT_LOC PRIMARY KEY (ID_SENSOR);
CREATE TABLE SENSOR_SECTOR (
    ID_SENSOR INTEGER NOT NULL,
    ID_SENSOR_TYPE INTEGER NULL,
    ID_MEASUREMENT_TYPE INTEGER NULL
);
CREATE UNIQUE INDEX XPKSENSOR_SECTOR ON SENSOR_SECTOR (ID_SENSOR ASC, ID_MEASUREMENT_TYPE ASC);
ALTER TABLE SENSOR_SECTOR
ADD CONSTRAINT XPKSENSOR_SECTOR PRIMARY KEY (ID_SENSOR, ID_MEASUREMENT_TYPE);
/*
 CREATE TABLE SENSOR_TYPE (
 ID_SENSOR_TYPE INTEGER NOT NULL,
 DESCRIPTION VARCHAR(18) NULL,
 LOCATION VARCHAR(18) NULL
 );
 CREATE UNIQUE INDEX XPKSENSOR_TYPE ON SENSOR_TYPE (ID_SENSOR_TYPE ASC);
 ALTER TABLE SENSOR_TYPE
 ADD CONSTRAINT XPKSENSOR_TYPE PRIMARY KEY (ID_SENSOR_TYPE);
 */
/*
 CREATE TABLE MEASUREMENT_TYPE (
 ID_MEAS_TYPE INTEGER NOT NULL,
 UNIT VARCHAR(18) NULL,
 NUM_VALUES VARCHAR(18) NULL
 );
 CREATE UNIQUE INDEX XPKMEASUREMENT_TYPE ON MEASUREMENT_TYPE (ID_MEAS_TYPE ASC);
 ALTER TABLE MEASUREMENT_TYPE
 ADD CONSTRAINT XPKMEASUREMENT_TYPE PRIMARY KEY (ID_MEAS_TYPE);
 */
CREATE TABLE VALUE_SECTOR_SENSOR (
    ID_SENSOR INTEGER NOT NULL,
    TIMESTAMP DATETIME NOT NULL,
    ID_MEASUREMENT_TYPE INTEGER NOT NULL,
    VALUE INTEGER NULL
);
CREATE UNIQUE INDEX XPKVALUE ON VALUE_SECTOR_SENSOR (
    ID_SENSOR ASC,
    TIMESTAMP ASC,
    ID_MEASUREMENT_TYPE ASC
);
ALTER TABLE VALUE_SECTOR_SENSOR
ADD CONSTRAINT XPKVALUE PRIMARY KEY (ID_SENSOR, TIMESTAMP, ID_MEASUREMENT_TYPE);
/* SECTOR V. PIPES CONNECTION:
 *
 *
 */
CREATE TABLE CONNECTION (
    ID_SECTOR_IN INTEGER NOT NULL,
    ID_SECTOR_OUT INTEGER NOT NULL,
    ID_PIPE INTEGER NOT NULL
);
CREATE UNIQUE INDEX XPKCONNECTION ON CONNECTION (
    ID_SECTOR_IN ASC,
    ID_SECTOR_OUT ASC,
    ID_PIPE ASC
);
ALTER TABLE CONNECTION
ADD CONSTRAINT XPKCONNECTION PRIMARY KEY (ID_SECTOR_IN, ID_SECTOR_OUT, ID_PIPE);
/* PIPE ENTITY ->
 *
 *
 */
CREATE TABLE PIPE (ID_PIPE INTEGER NOT NULL);
CREATE UNIQUE INDEX XPKPIPE ON PIPE (ID_PIPE ASC);
ALTER TABLE PIPE
ADD CONSTRAINT XPKPIPE PRIMARY KEY (ID_PIPE);
/* PIPE ENTITY BRANCHES->  ALL
 *
 *
 */
CREATE TABLE PIPE_ACT_LOC (
    ID_ACTUATOR INTEGER NOT NULL,
    ID_PIPE INTEGER NULL
);
CREATE UNIQUE INDEX XPKPIPE_ACT_LOC ON PIPE_ACT_LOC (ID_ACTUATOR ASC);
ALTER TABLE PIPE_ACT_LOC
ADD CONSTRAINT XPKPIPE_ACT_LOC PRIMARY KEY (ID_ACTUATOR);
CREATE TABLE ACTUATOR_PIPE (
    ID_ACTUATOR INTEGER NOT NULL,
    ID_TYPE INTEGER NULL
);
CREATE UNIQUE INDEX XPKACTUATOR_PIPE ON ACTUATOR_PIPE (ID_ACTUATOR ASC);
ALTER TABLE ACTUATOR_PIPE
ADD CONSTRAINT XPKACTUATOR_PIPE PRIMARY KEY (ID_ACTUATOR);
/*
 CREATE TABLE WATER_VALVE (
 ID_ACTUATOR INTEGER NOT NULL,
 IS_ACTIVE VARCHAR(18) NULL
 );
 CREATE UNIQUE INDEX XPKWATER_VALVE ON WATER_VALVE (ID_ACTUATOR ASC);
 ALTER TABLE WATER_VALVE
 ADD CONSTRAINT XPKWATER_VALVE PRIMARY KEY (ID_ACTUATOR);
 */
CREATE TABLE VALUE_PIPE_ACTUATOR (
    ID_ACTUATOR INTEGER NOT NULL,
    TIMESTAMP DATETIME NOT NULL,
    VALUE INTEGER NULL
);
CREATE UNIQUE INDEX XPKVALUE ON VALUE_PIPE_ACTUATOR (ID_ACTUATOR ASC, TIMESTAMP ASC);
ALTER TABLE VALUE_PIPE_ACTUATOR
ADD CONSTRAINT XPKVALUE PRIMARY KEY (ID_ACTUATOR, TIMESTAMP);
CREATE TABLE PIPE_SENS_LOC (
    ID_SENSOR INTEGER NOT NULL,
    ID_PIPE INTEGER NULL
);
CREATE UNIQUE INDEX XPKPIPE_SENSOR_LOC ON PIPE_SENS_LOC (ID_SENSOR ASC);
ALTER TABLE PIPE_SENS_LOC
ADD CONSTRAINT XPKPIPE_SENSOR_LOC PRIMARY KEY (ID_SENSOR);
CREATE TABLE SENSOR_PIPE (
    ID_SENSOR INTEGER NOT NULL,
    ID_SENSOR_TYPE INTEGER NULL,
    ID_MEASUREMENT_TYPE INTEGER NULL
);
CREATE UNIQUE INDEX XPKSENSOR_PIPE ON SENSOR_PIPE (ID_SENSOR ASC, ID_MEASUREMENT_TYPE ASC);
ALTER TABLE SENSOR_PIPE
ADD CONSTRAINT XPKSENSOR_PIPE PRIMARY KEY (ID_SENSOR, ID_MEASUREMENT_TYPE);
CREATE TABLE VALUE_PIPE_SENSOR (
    ID_SENSOR INTEGER NOT NULL,
    TIMESTAMP DATETIME NOT NULL,
    ID_MEASUREMENT_TYPE INTEGER NOT NULL,
    VALUE INTEGER NULL
);
CREATE UNIQUE INDEX XPKVALUE ON VALUE_PIPE_SENSOR (
    ID_SENSOR ASC,
    TIMESTAMP ASC,
    ID_MEASUREMENT_TYPE ASC
);
ALTER TABLE VALUE_PIPE_SENSOR
ADD CONSTRAINT XPKVALUE PRIMARY KEY (ID_SENSOR, TIMESTAMP, ID_MEASUREMENT_TYPE);
/* MULTIPURPOSE BRANCHES ->
 *
 *
 */
CREATE TABLE ACTUATOR_TYPE (
    ID_TYPE INTEGER NOT NULL,
    DESCRIPTION VARCHAR(18) NULL,
    IS_SWITCH SMALLINT NULL,
    LOCATION VARCHAR(18) NULL
);
CREATE UNIQUE INDEX XPKACTUATOR_TYPE ON ACTUATOR_TYPE (ID_TYPE ASC);
ALTER TABLE ACTUATOR_TYPE
ADD CONSTRAINT XPKACTUATOR_TYPE PRIMARY KEY (ID_TYPE);
/*
 CREATE TABLE ACTUATOR_PIPE_TYPE (
 ID_TYPE INTEGER NOT NULL,
 DESCRIPTION VARCHAR(18) NULL,
 IS_SWITCH SMALLINT NULL
 );
 CREATE UNIQUE INDEX XPKACTUATOR_PIPE_TYPE ON ACTUATOR_PIPE_TYPE (ID_TYPE ASC);
 ALTER TABLE ACTUATOR_PIPE_TYPE
 ADD CONSTRAINT XPKACTUATOR_PIPE_TYPE PRIMARY KEY (ID_TYPE);
 */
CREATE TABLE SENSOR_TYPE (
    ID_SENSOR_TYPE INTEGER NOT NULL,
    ID_MEASUREMENT_TYPE INTEGER NOT NULL,
    SENSOR_DESCRIPTION VARCHAR(18) NULL,
    MEASUREMENT_DESCRIPTION VARCHAR(18) NULL,
    UNIT VARCHAR(18) NULL,
    LOCATION VARCHAR(18) NULL
);
CREATE UNIQUE INDEX XPKSENSOR_TYPE ON SENSOR_TYPE (ID_SENSOR_TYPE ASC, ID_MEASUREMENT_TYPE ASC);
ALTER TABLE SENSOR_TYPE
ADD CONSTRAINT XPKSENSOR_TYPE PRIMARY KEY (ID_SENSOR_TYPE, ID_MEASUREMENT_TYPE);
-- @block
ALTER TABLE ACTUATOR_PIPE
ADD (
        CONSTRAINT R_42 FOREIGN KEY (ID_TYPE) REFERENCES ACTUATOR_TYPE (ID_TYPE) ON DELETE
        SET NULL
    );
ALTER TABLE ACTUATOR_SECTOR
ADD (
        CONSTRAINT R_43 FOREIGN KEY (ID_TYPE) REFERENCES ACTUATOR_TYPE (ID_TYPE) ON DELETE
        SET NULL
    );
/*
 ALTER TABLE PUMP
 ADD (
 CONSTRAINT R_14 FOREIGN KEY (ID_ACTUATOR) REFERENCES ACTUATOR_SECTOR (ID_ACTUATOR) ON DELETE CASCADE
 );
 ALTER TABLE NUTRITION_VALUE
 ADD (
 CONSTRAINT R_13 FOREIGN KEY (ID_ACTUATOR) REFERENCES ACTUATOR_SECTOR (ID_ACTUATOR) ON DELETE CASCADE
 );
 */
ALTER TABLE ESTATE
ADD (
        CONSTRAINT R_1 FOREIGN KEY (LON, LAT) REFERENCES ADDRESS (LON, LAT)
    );
ALTER TABLE PIPE_ACT_LOC
ADD (
        CONSTRAINT R_40 FOREIGN KEY (ID_ACTUATOR) REFERENCES ACTUATOR_PIPE (ID_ACTUATOR)
    );
ALTER TABLE PIPE_ACT_LOC
ADD (
        CONSTRAINT R_41 FOREIGN KEY (ID_PIPE) REFERENCES PIPE (ID_PIPE) ON DELETE
        SET NULL
    );
ALTER TABLE SENSOR_SECTOR
ADD (
        CONSTRAINT R_53 FOREIGN KEY (ID_SENSOR_TYPE, ID_MEASUREMENT_TYPE) REFERENCES SENSOR_TYPE (ID_SENSOR_TYPE, ID_MEASUREMENT_TYPE)
    );
ALTER TABLE SENSOR_PIPE
ADD (
        CONSTRAINT R_56 FOREIGN KEY (ID_SENSOR_TYPE, ID_MEASUREMENT_TYPE) REFERENCES SENSOR_TYPE (ID_SENSOR_TYPE, ID_MEASUREMENT_TYPE)
    );
ALTER TABLE VALUE_SECTOR_ACTUATOR
ADD (
        CONSTRAINT R_130 FOREIGN KEY (ID_ACTUATOR) REFERENCES ACTUATOR_SECTOR (ID_ACTUATOR)
    );
ALTER TABLE VALUE_PIPE_ACTUATOR
ADD (
        CONSTRAINT R_131 FOREIGN KEY (ID_ACTUATOR) REFERENCES ACTUATOR_PIPE (ID_ACTUATOR)
    );
ALTER TABLE VALUE_SECTOR_SENSOR
ADD (
        CONSTRAINT R_132 FOREIGN KEY (ID_SENSOR, ID_MEASUREMENT_TYPE) REFERENCES SENSOR_SECTOR (ID_SENSOR, ID_MEASUREMENT_TYPE)
    );
ALTER TABLE VALUE_PIPE_SENSOR
ADD (
        CONSTRAINT R_133 FOREIGN KEY (ID_SENSOR, ID_MEASUREMENT_TYPE) REFERENCES SENSOR_PIPE (ID_SENSOR, ID_MEASUREMENT_TYPE)
    );
ALTER TABLE PIPE_SENS_LOC
ADD (
        CONSTRAINT R_260 FOREIGN KEY (ID_SENSOR) REFERENCES SENSOR_PIPE (ID_SENSOR)
    );
ALTER TABLE PIPE_SENS_LOC
ADD (
        CONSTRAINT R_45 FOREIGN KEY (ID_PIPE) REFERENCES PIPE (ID_PIPE) ON DELETE
        SET NULL
    );
ALTER TABLE SECTOR
ADD (
        CONSTRAINT R_4 FOREIGN KEY (LON, LAT) REFERENCES ESTATE (LON, LAT) ON DELETE
        SET NULL
    );
ALTER TABLE SECT_ACT_LOC
ADD (
        CONSTRAINT R_6 FOREIGN KEY (ID_ACTUATOR) REFERENCES ACTUATOR_SECTOR (ID_ACTUATOR)
    );
ALTER TABLE SECT_ACT_LOC
ADD (
        CONSTRAINT R_9 FOREIGN KEY (id_sector) REFERENCES SECTOR (id_sector) ON DELETE
        SET NULL
    );
ALTER TABLE WEATHER
ADD (
        CONSTRAINT R_49 FOREIGN KEY (LON, LAT) REFERENCES ADDRESS (LON, LAT)
    );
ALTER TABLE SECT_SENS_LOC
ADD (
        CONSTRAINT R_27 FOREIGN KEY (id_sector) REFERENCES SECTOR (id_sector) ON DELETE
        SET NULL
    );
ALTER TABLE SECT_SENS_LOC
ADD (
        CONSTRAINT R_26 FOREIGN KEY (ID_SENSOR) REFERENCES SENSOR_SECTOR (ID_SENSOR)
    );
ALTER TABLE CONNECTION
ADD (
        CONSTRAINT R_33 FOREIGN KEY (ID_SECTOR_IN) REFERENCES SECTOR (id_sector)
    );
ALTER TABLE CONNECTION
ADD (
        CONSTRAINT R_35 FOREIGN KEY (ID_PIPE) REFERENCES PIPE (ID_PIPE)
    );
ALTER TABLE CONNECTION
ADD (
        CONSTRAINT R_36 FOREIGN KEY (ID_SECTOR_OUT) REFERENCES SECTOR (id_sector)
    );